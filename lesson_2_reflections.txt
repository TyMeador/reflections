How is the staging area different from the working directory and the repository? What value do you think it offers?

-The staging area acts as an intermediary between the working directory and the repository

How can you use the staging area to make sure you have one commit per logical change?

-You can compare the staging area to both the working directory and the repository/commits

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

-Specifically, this would have been very helpful on early stages of the map. When I needed to add a big feature, but wanted to keep the working copy to show off.

How do the diagrams help you visualize the branch structure?

-using git log --graph (possibly with --oneline)[branch names....], you can easily see the entire branch structure, including when each branch was created, why it was created, and how each branch developed. This will ease the descion of when and where to merge your projects branches.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

-Merging two branches together results in a single branch containing all commits from both branches. We represent branches in the diagram the way we do so that we can easily track commit parents

What are the pros and cons of Git’s automatic merging vs. always doing merges manually?

-Pro: It makes merging files simpler, faster, and more reliable by doing it the exact same way every time

Con: Programs are only as smart as thier coders. small logic errors could result in catostrophic, unusable merged commits